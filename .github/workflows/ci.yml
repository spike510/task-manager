name: Go CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: taskdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install dependencies
        run: go mod tidy

      - name: Run linter
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run --timeout=5m ./...

      - name: Install migrate CLI
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.3/migrate.linux-amd64.tar.gz -o migrate.tar.gz
          tar -xzf migrate.tar.gz
          sudo mv migrate /usr/local/bin/migrate
          migrate -version

      - name: Run database migrations
        env:
          DATABASE_URL: "postgres://postgres:password@localhost:5432/taskdb?sslmode=disable"
        run: |
          migrate -path ./migrations -database "$DATABASE_URL" up

      - name: Run tests
        env:
          DB_HOST: "localhost"
          DB_PORT: "5432"
          DB_USER: "postgres"
          DB_PASSWORD: "password"
          DB_NAME: "taskdb" 
        run: |
          go test ./... -v

      - name: Build Docker image
        run: |
          docker build -t task-manager:latest .

      - name: Push Docker image
        if: false
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: <your-dockerhub-username>/task-manager:latest

